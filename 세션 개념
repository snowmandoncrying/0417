
@ 세션
  세션은 웹 서버쪽의 웹 컨테이너에 상태를 유지하기 위한 정보를 저장한다.
  javax.servlet.http 패키지의 HttpSession 인터페이스를 통해서 세션을 사용한다.
  서버와 관련된 정보를 노출시키지 않기 위해 쿠키를 사용하는 것보다 HttpSession 인터페이스를 통한
  세션을 통한 상태관리가 더욱 효율적임

  세션은 웹 브라우저당 1개씩 생성되어 웹 컨테이너에 저장한다.

# 세션 객체의 메소드들
  getAttribute() - 해당되는 속성값을 Object 타입으로 반환. 없을 경우 null값을 반환
  getAttributeNames() - 속성의 이름들을 Enumeration 객체 타입으로 반환
  getCreationTime()
  getId() - 세션에 할당된 고유 ID를 String 타입으로 반환
  getMaxInactiveInterval() - 현재 생성된 세션을 유지하기 위해 설정된 최대 시간을 정수형으로 반환
  invalidate() - 현재 생성된 세션을 무효화
  removeArrtibute(java.lang, String name) - name으로 지정한 속성의 값을 제거
  setAttribute(java.lang, String name, java.lang, Object value) - name으로 지정한 이름에 value 값을 할당
  setMaxInactiveInterval(int interval) - 세션의 최대 유지시간을 초 단위로 설정

@ 세션 속성

  1. 세션 속성의 설정 -  session 객체의 setAttribute() 메소드 사용
  > session.setAttribute("memId", "test");
  2. 세션의 속성 사용 - session 객체의 getAttribute() 메소드 사용
  > String id = (String)session.getAttribute("memId");
  3. 세션의 속성 삭제 - session 객체의 removeAttribute() 메소드 사용
  > session.removeAttribute("memId");
  4. 세션의 모든 속성 삭제 - session 객체의 invalidate() 메소드 사용
  > session.invalidate()

@ 세션을 사용한 회원인증

# LogonDBBean (DB 처리반) - DB > id 값을 가지고 member 테이블에서 pwssword 값을 가져옴
# 회원 인증 처리 (sessionMemberLoginOK.jsp) >로그온디비빈에 result를 리턴함
# 회원 인증 폼 (sessionMemberLogin.jsp) - 회원 인증 처리에 입력된 회원정보를 줌. 
  회원 인증에 실패할 경우 입력된 정보를 가지고 로그온디비빈 객체의 userCheck() 메소드 호출
# 인증 검증 페이지 (sessionLoginConfirm.jsp) - 회원인증 폼에 인증되지 않은 사용자일 경우 값 리턴,
  로그아웃 할 경우 로그아웃 객체에 값 리턴
# 로그아웃 (sessionLogOut.jsp)

















