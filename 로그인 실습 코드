# loginForm.jsp (로그인 폼)

<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<h1>/jsp/0417/loginForm.jsp</h1>>

<form action="loginPro.jsp" method="post">
	id : <input type="text" name="id" /> <br />
	pw : <input type="text" name="pw" /> <br />
		 <input type="submit" name="login" /> <br />
</form>
--------------------

# loginPro.jsp (로그인 프로)

<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<h1>/jsp/0417/loginPro.jsp</h1>

<%
	String id = request.getParameter("id");
	String pw = request.getParameter("pw");

	if(id.equals("java") && pw.equals("1234")){	// 아이디가 java 이고 비번이 1234 이면 로그인 성공! 세션이나 쿠키는 로그인이 성공했을 때 생성되어야 함
		session.setAttribute("sid", id);	// 세션 값만 추가시켜주면 됨. 맵 타입이기에 키와 밸류가 들어감. 밸류엔 id, 키에는 마음대로. (sid로 설정)
							// 세션이 만들어지면 페이지 어디서든 getAttribute() 메서드로 id와 pw를 꺼내쓸 수 있다 > 즉 전달할 필요가 없어짐
		response.sendRedirect("main.jsp");	// 로그인에 성공하면 메인 페이지로 이동 
							// (페이지 이동 방식 2가지 : 리다이렉트는 단순이동, 포워드는 정보를 가지고 이동) 세션은 리다이렉트 - 단순이동
	}else{						// 로그인 실패 - 이 부분은 html 스크립트로 처리
%>		<script>
			alert("id/ pw 를 확인하세요.");	// 알림창 생성
			history.go(-1);			// 그리고 다시 뒤로 가라 - id와 pw를 틀렸으니까 다시 로그인 페이지로 이동
		</script>	
<% } %>
----------------------------

# main.jsp (메인 - 로그인 성공 시)

<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<h1>/jsp/0417/main.jsp</h1>

<%
	// 서버에 저장된 세션 값 꺼내기 !!
	String sid = (String)session.getAttribute("sid");	// 리턴타입 : 오브젝트 - 스트링으로 형변환 하고 저장해야함 - 세션값을 꺼내는 것
	if(sid == null){	// sid가 null과 같다면 로그인이 안 된 것임 > 메인은 로그인을 성공해야만 들어올 수 있는 페이지
%>		<script>
			alert("로그인 후 사용 가능 합니다.");	// 알림창
			window.location='loginForm.jsp'	// 다시 로그인 폼.jsp로 이동?
		</script>
					<!-- response.sendRedirect("loginForm.jsp");	// 로그인 폼으로 다시 보내줌 - 유효성 검사 - 메인을 호출하면 로그인폼으로 이동됨  -->
<% } %>
<h2>[<%=sid %>]님 어서오세용가리~~♡</h2>	// 로그인에 성공하면 메인 화면에 출력되는 것

<button onclick="window.location='user.jsp'">회원정보</button>		<!-- 버튼태그 : 인풋타입 버튼이랑 같은 의미, 회원정보랑 로그아웃 클릭 탭을 만들어줌 -->
<button onclick="window.location='logout.jsp'">로그아웃</button>
----------------------------

# logout.jsp (로그아웃)

<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<h1>/jsp/0417/logout.jsp</h1>	

<%
	session.removeAttribute("sid");	// 세션 삭제 - 하나만 삭제
	session.invalidate();		// 클라이언트의 모든 세션 삭제 - 연결된 모든 세션 삭제 (로그아웃)
	response.sendRedirect("loginForm.jsp");	// 로그아웃하면 다시 로그인폼으로 되돌아가도록 함
%>
------------------

@ loginPro.jsp	(심화 버전 - JSP와 자바 DAO, DTO 연결 : DAO와 DTO 각각에 1,2단계 / 3,4,5단계 적어놓고 JSP와 연결한 것 - JSP파일마다 단계별로 일일이 다 쓰면 귀찮으니까 그냥 불러와서 쓰면 됨)

<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ page import="java.sql.*" %>
<%@ page import="web.bean.dao.OracleConnection" %>

<h1>/jsp/global/user/loginPro.jsp</h1>

<jsp:useBean id="dto" class="web.bean.dto.GlobalUserDTO" />
<jsp:setProperty name="dto" property="*" />	<!-- 전달되는 모든 프로퍼티를 dto에 저장 >> 사용하려면 꺼내 써야함 -->


<%
	//	String id = request.getParameter("id"); - 이거 안하려고 위에 jsp프로퍼티를 한거임 >> 이거 일일이 다 쓰면 귀찮음. 그래서 그냥 프로퍼티 해버리면 된다.
	//	String pw = request.getParameter("pw");
	
	// DB 확인 - 쿼리문 완성 > 실행하면 됨 - 쿼리문이 셀렉트니까 실행할 땐 리절트셋으로
	Connection conn = OracleConnection.getConnection();	// 1,2단계를 처리한 것 - 자바 임포트
	String sql ="select count(*) from global_user where id=? and pw=?"; 
	
	PreparedStatement pstmt = conn.prepareStatement(sql);
	pstmt.setString(1, id);	// 물음표 1번 - id
	pstmt.setString(2, pw);	// 물음표 2번 - pw
	
	ResultSet rs = pstmt.executeQuery();	// select 쿼리문이니까 실행할 땐 ResultSet 으로 불러와서 써야함
	rs.next();
	int result = rs.getInt(1);	// count는 num 이니까 int로 꺼내면 된다 - 결과가 0이거나 1이거나 - 결과가 1일때 세션을 만들어주면 됨
	
	rs.close();	// 계속 실행되면 계속 값을 불러오는거니까 실행을 종료시켜줘야한다.
	pstmt.close();
	conn.close();
	
	if(result == 1){	// 결과가 1이면 세션을 만들어주겠다.
		session.setAttribute("sid", id);
		response.sendRedirect("main.jsp");
	}else{		// 결과가 1이 아니면 아이디와 패스워드를 확인하라는 경고창을 띄우고 이전 페이지로 보내버림
%>		<script>
			alert("id / pw 를 확인하세요!!!");
			history.go(-1);
		</script>		
<% } %> 

-----------

# login.jsp

<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<h1>/jsp/global/user/login.jsp</h1>

<form action="loginPro.jsp" method="post">
	id : <input type="text" name="id" /> <br />
	pw : <input type="text" name="pw" /> <br />
		 <input type="submit" value="login" /> <br />
</form>
<a href="input.jsp">회원가입</a>
-------------------

# loginPro.jsp

<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ page import="java.sql.*" %>
<%@ page import="web.bean.dao.OracleConnection" %>

<h1>/jsp/global/user/loginPro.jsp</h1>

<jsp:useBean id="dto" class="web.bean.dto.GlobalUserDTO" />
<jsp:setProperty name="dto" property="*" />	<!-- 전달되는 모든 프로퍼티를 dto에 저장 : 사용하려면 꺼내 써야함 -->
<jsp:useBean id="dao" class="web.bean.dao.GlobalUserDAO" />

<%
	int result = dao.loginCheck(dto); // dao를 호출해서 dto를 매개변수로 전달해줌
	
	if(result == 1){
		session.setAttribute("sid", dto.getId());
		response.sendRedirect("main.jsp");
	}else{
%>		<script>
			alert("id / pw 를 확인하세요!");
			history.go(-1);
		</script>		
<% } %> 
------------------------

# main.jsp

<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<h1>/jsp/global/user/main.jsp</h1>

<%
	String sid = (String)session.getAttribute("sid");	
	if(sid == null){	
%>		<script>
			alert("로그인 후 사용 가능 합니다.");
			window.location='login.jsp';
		</script>
		
<% } %>
<h2>[<%=sid %>]님 어서오세용가리~~^^!!</h2>

<button onclick="window.location='user.jsp'">회원정보</button>
<button onclick="window.location='logout.jsp'">로그아웃</button>

-------------------

# logout.jsp

<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<h1>/jsp/0417/logout.jsp</h1>	

<%
	session.removeAttribute("sid");
	session.invalidate();
	response.sendRedirect("login.jsp");	
%>

------------------

# GlobalUserDTO.java

package web.bean.dto;
import java.sql.Timestamp;
public class GlobalUserDTO {
   private String id;
   private String pw;
   private String name;
   private String birth;
   private String phone;
   private String img;
   private Timestamp reg;   
   public void setId(String id) {   this.id = id;}
   public String getId() {   return id; }
   
   public void setBirth(String birth) {      this.birth = birth;   }
   public String getBirth() {      return birth;   }
   public String getPw() {      return pw;   }
   public void setPw(String pw) {      this.pw = pw;   }
   public String getName() {      return name;   }
   public void setName(String name) {      this.name = name;   }
   public String getPhone() {      return phone;   }
   public void setPhone(String phone) {      this.phone = phone;   }
   public String getImg() {      return img;   }
   public void setImg(String img) {      this.img = img;   }
   public Timestamp getReg() {      return reg;   }
   public void setReg(Timestamp reg) {      this.reg = reg;   }
}

------------------

# GlobalUserDAO.java

package web.bean.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;

import web.bean.dto.GlobalUserDTO;
public class GlobalUserDAO {
   private Connection conn = null;
   private PreparedStatement pstmt = null;
   private ResultSet rs = null;
   private String sql = null;
   // 3, 4, 5 단계 작업하는 class. 실행된 결과만 jsp로 넘길 예정
   // 현재 전달된 파라미터의 정보는 DTO에 저장되어 있는 상태임 -> 메소드 매개변수로 데이터 받기
   public int loginCheck(GlobalUserDTO dto) {	// 여기서 매개변수로 dto를 받아서 실행하게 됨
      int result = 0;
      try {
         conn = OracleConnection.getConnection(); // 1, 2 단계
         sql = "select count(*) from global_user where id=? and pw=?";
         pstmt = conn.prepareStatement(sql);
         pstmt.setString(1, dto.getId()); // dto에 있는 데이터를 꺼내서 대입 - 꺼내서 쓰는 것임 - 1번 물음표 2번 물음표에 각각 대입을 한 것
         pstmt.setString(2, dto.getPw());
         rs = pstmt.executeQuery();	// 셀렉트니까 쿼리로 실행
         rs.next();
         result = rs.getInt(1); 
      }catch(Exception e){
         e.printStackTrace();
      }finally {
         OracleConnection.close(rs, pstmt, conn);
      }
      return result;
   }
   public void userInput(GlobalUserDTO dto){
	   try {
		   conn = OracleConnection.getConnection();
		   sql="insert into global_user(id, pw, name, birth, phone)"
				   + "values(?,?,?,?,?)";
		   pstmt.setString(1, dto.getId());
		   pstmt.setString(2, dto.getPw());
		   pstmt.setString(3, dto.getName());
		   pstmt.setString(4, dto.getBirth());
		   pstmt.setString(5, dto.getPhone());
		   
		   pstmt.executeUpdate();
	   }catch(Exception e) {
		   e.printStackTrace();
	}finally {
		OracleConnection.close(rs, pstmt, conn);
		}
	}
}
디에이오 다시
package web.bean.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import web.bean.dto.GlobalUserDTO;

public class GlobalUserDAO {
   //3,4,5 단계
   private Connection conn = null;
   private PreparedStatement pstmt = null;
   private ResultSet rs = null;
   private String sql = null;
   
   public int loginCheck(GlobalUserDTO dto) {
      int result = 0 ;
      try {
         conn = OracleConnection.getConnection(); // 1,2단계
         sql = "select count(*) from global_user where id=? and pw=?";
         pstmt = conn.prepareStatement(sql);
         pstmt.setString(1,dto.getId());
         pstmt.setString(2,dto.getPw());
         rs = pstmt.executeQuery();
         rs.next();
         result = rs.getInt(1);
      } catch (Exception e) {
         e.printStackTrace();
      }finally {
         OracleConnection.close(rs, pstmt, conn);
      }
      return result;
   }
   //회원가입
   public void userInput(GlobalUserDTO dto) {
      try {
         conn = OracleConnection.getConnection();
         sql="insert into global_user(id,pw,name,birth,phone)"+"values(?,?,?,?,?)";
         pstmt = conn.prepareStatement(sql);
         pstmt.setString(1,dto.getId());
         pstmt.setString(2,dto.getPw());
         pstmt.setString(3,dto.getName());
         pstmt.setString(4,dto.getBirth());
         pstmt.setString(5,dto.getPhone());
         
         pstmt.executeUpdate();
      }catch(Exception e){
         e.printStackTrace();
      }finally {
         OracleConnection.close(rs, pstmt, conn);
      }
   }
}
--------------------

# input.jsp

<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<h1>input.jsp/ 회원가입</h1>

<form action="inputPro.jsp" method="post">
	id : <input type="text" name="id" /> <br />
	pw : <input type="text" name="pw" /> <br />
	name : <input type="text" name="name" /> <br />
	birth : <input type="text" name="birth" /> <br />
	phone : <input type="text" name="phone" /> <br />
	
		 <input type="submit" value="가입" />
</form>
-----------------

# inputPro.jsp

<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<h1>inputPro.jsp</h1>
<% request.setCharacterEncoding("UTF-8"); // post방식 인코딩 - 한글이 들어가야 하니까 %>	

<jsp:useBean id="dto" class="web.bean.dto.GlobalUserDTO" />
<jsp:setProperty name="dto" property="*" />
<jsp:useBean id="dao" class="web.bean.dao.GlobalUserDAO" />
<%
	dao.userInput(dto);
%>
<script>
	alert("가입 되었습니다.");
	window.location="login.jsp";
</script>
---------------------
# OracleConnection.java

package web.bean.dao;

import java.sql.*;

public class OracleConnection {
	public static Connection getConnection() {	// 연결을 해주는 메서드 - 미리 설정하면 편함 - 임포트만 해주면 됨
		Connection conn = null;
		try {
			Class.forName("oracle.jdbc.driver.OracleDriver");
			String dbURL="jdbc:oracle:thin:@192.168.219.198:1521:orcl";
			String user =  "scott3";
			String dbpw = "tiger";
			conn = DriverManager.getConnection(dbURL, user, dbpw);
		}catch(Exception e) {
			e.printStackTrace();
		}
		return conn;
	}
	public static void close(ResultSet rs, PreparedStatement pstmt, Connection conn) { 			// 연결을 끊어주는 메서드
		if(rs != null) { try{rs.close();} catch(SQLException s) { s.printStackTrace(); }}
		if(pstmt != null) { try{pstmt.close();} catch(SQLException s) { s.printStackTrace(); }}
		if(conn != null) { try{conn.close();} catch(SQLException s) { s.printStackTrace(); }}
	}
}
