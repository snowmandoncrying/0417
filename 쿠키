@ 쿠키
  http 프로토콜은 이전에 무엇을 했고 지금 무엇을 하는지에 대한 정보를 갖고 있지 않는다.
  쿠키는 프로토콜의 상태를 지속시키기 위한 방법이다.
  웹 브라우저(클라이언트)의 정보를 자신들에게 저장한다.
  쿠키는 임시파일이며 크기는 4kb 이하로 생성된다
  쿠키는 보안문제를 유발하기 때문에 웹 브라우저 자체에 쿠키 거부 기능이 있다.
  > 브라우저와 연결을 지속시키는 기능을 수행할 수 없음 (단점)

  로그인 하면 정보를 만들어서 브라우저에 넘겨줌 (놀이공원 자유이용권 팔찌 - 표식)
	훼손 될 수 있음. 쿠키를 삭제하게 되면 로그인이 끊김. 
	하지만 세션은 서버에 보관하고 있기 때문에 브라우저를 껐을 때 삭제됨
	쿠키는 브라우저 측에 남아 있음 - 쿠키는 파일임 그래서 한번씩 삭제하면 브라우저 속도 향상됨


@ 쿠키의 동작 방식
  1번 - 웹 브라우저에서 요청하면 웹 서버가 쿠키를 생성해서 응답한다
  2번 - 웹 브라우저 쿠키 저장소에 쿠키를 저장한다
  3번 - 이후 같은 사이트에 접속 시 저장된 쿠키가 요청정보에 실려간다. (즉 웹 서버로 쿠키를 요청)

@ jsp에서 쿠키를 생성

  #  cookie 클래스를 사용
> Cookie cookie = new Cookie(String name, String value); -name:  쿠키 이름, value: 쿠키의 값

  #  쿠키를 생성한 후 반드시 response객체의 addCookie() 메소드 추가
> response.addCookie(name);

  #  클라이언트의 요청과 함께 전달되어져 온 쿠키를 읽어올 때 -request 객체의 getCookies() 메소드 사용
> Cookie[] cookies = request.getCookies();

  # 쿠키의 수명(지속시간)은 cookie 객체의 setMaxAge() 메소드 사용
> cookie.setMaxAge(int expiry);

@ 쿠키의 작성 절차
  1. 쿠키 생성
  2. 쿠키에 필요한 설정 - 쿠키 유효시간, 설명, 도메인, 패스, 보안 등
  3. 웹 브랑저(클라이언트)에 생성된 쿠키 전송

@ 웹 브라우저에 저장된 쿠키 사용
  1. 웹 브라우저의 요청에서 쿠키를 얻어옴
  2. 쿠키는 이름, 값의 쌍으로 된 배열 형태로 리턴 > 배열에서 쿠키 이름을 가져옴
  3. 쿠키 이름을 통해서 해당 쿠키에 설정된 값 추출

@ 쿠키를 이용한 회원 인증
  회원인증 폼(cookieMemberLogin.jsp), 회원인증 처리(cookieMemberLoginOK.jsp), 
  LogonDBBean (DB 처리빈), DB, 인증검증 페이지(cookieLoginConfirm.jsp), 로그아웃(cookieLogout.jsp)


